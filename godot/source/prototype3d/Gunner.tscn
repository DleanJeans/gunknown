[gd_scene load_steps=22 format=2]

[ext_resource path="res://source/prototype3d/Gunner.gd" type="Script" id=1]
[ext_resource path="res://source/prototype3d/Gun.tscn" type="PackedScene" id=2]
[ext_resource path="res://source/prototype3d/Ring.tscn" type="PackedScene" id=3]

[sub_resource type="VisualShaderNodeScalarUniform" id=19]
uniform_name = "dissolve"

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 3.14159 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=21]
function = 14

[sub_resource type="VisualShaderNodeScalarOp" id=22]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=25]
function = 1

[sub_resource type="OpenSimplexNoise" id=26]

[sub_resource type="NoiseTexture" id=27]
noise = SubResource( 26 )

[sub_resource type="VisualShaderNodeTexture" id=28]
texture = SubResource( 27 )

[sub_resource type="VisualShaderNodeScalarOp" id=29]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=30]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShader" id=31]
code = "shader_type spatial;
uniform sampler2D tex_frg_5;uniform float dissolve;



void vertex() {
// Sortie:0

}

void fragment() {
// Entr√©e:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	vec4 tex_frg_5_read = texture( tex_frg_5 , n_out2p0.xy );
	n_out5p0 = tex_frg_5_read.rgb;
	n_out5p1 = tex_frg_5_read.a;

// ScalarUniform:12
	float n_out12p0;
	n_out12p0 = dissolve;

// ScalarOp:16
	float n_in16p0 = 1.00000;
	float n_out16p0;
	n_out16p0 = n_in16p0 - n_out12p0;

// ScalarOp:13
	float n_in13p1 = 3.14159;
	float n_out13p0;
	n_out13p0 = n_out16p0 * n_in13p1;

// ScalarFunc:4
	float n_out4p0;
	n_out4p0 = cos(n_out13p0);

// ScalarOp:9
	float n_in9p1 = 2.00000;
	float n_out9p0;
	n_out9p0 = n_out4p0 / n_in9p1;

// ScalarOp:6
	float n_out6p0;
	n_out6p0 = dot(n_out5p0,vec3(0.333333,0.333333,0.333333)) - n_out9p0;

// ScalarOp:15
	float n_in15p1 = 0.50000;
	float n_out15p0;
	n_out15p0 = n_out6p0 + n_in15p1;

// ScalarFunc:14
	float n_out14p0;
	n_out14p0 = floor(n_out15p0);

// Sortie:0
	ALPHA = n_out14p0;

}

void light() {
// Sortie:0

}
"
graph_offset = Vector2( -562, 166 )
nodes/fragment/0/position = Vector2( 1020, 80 )
nodes/fragment/2/node = SubResource( 24 )
nodes/fragment/2/position = Vector2( 100, 120 )
nodes/fragment/4/node = SubResource( 25 )
nodes/fragment/4/position = Vector2( 60, 240 )
nodes/fragment/5/node = SubResource( 28 )
nodes/fragment/5/position = Vector2( 260, 0 )
nodes/fragment/6/node = SubResource( 29 )
nodes/fragment/6/position = Vector2( 460, 100 )
nodes/fragment/9/node = SubResource( 30 )
nodes/fragment/9/position = Vector2( 260, 220 )
nodes/fragment/12/node = SubResource( 19 )
nodes/fragment/12/position = Vector2( -560, 320 )
nodes/fragment/13/node = SubResource( 20 )
nodes/fragment/13/position = Vector2( -160, 280 )
nodes/fragment/14/node = SubResource( 21 )
nodes/fragment/14/position = Vector2( 840, 80 )
nodes/fragment/15/node = SubResource( 22 )
nodes/fragment/15/position = Vector2( 680, 80 )
nodes/fragment/16/node = SubResource( 23 )
nodes/fragment/16/position = Vector2( -360, 260 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 5, 0, 6, 0, 4, 0, 9, 0, 9, 0, 6, 1, 13, 0, 4, 0, 6, 0, 15, 0, 15, 0, 14, 0, 14, 0, 0, 1, 12, 0, 16, 1, 16, 0, 13, 0 )

[sub_resource type="ShaderMaterial" id=32]
shader = SubResource( 31 )
shader_param/dissolve = 0.0

[sub_resource type="CubeMesh" id=33]
material = SubResource( 32 )
size = Vector3( 1, 2, 1 )

[sub_resource type="ConvexPolygonShape" id=16]
points = PoolVector3Array( -0.5, 1, 0.5, 0.5, 1, -0.5, 0.5, 1, 0.5, -0.5, 1, -0.5, -0.5, -1, 0.5, 0.5, -1, -0.5, 0.5, -1, 0.5, -0.5, -1, -0.5, 0.5, 1, 0.5, -0.5, 1, -0.5, 0.5, 1, -0.5, -0.5, 1, 0.5, 0.5, -1, 0.5, -0.5, -1, -0.5, 0.5, -1, -0.5, -0.5, -1, 0.5, 0.5, 1, 0.5, -0.5, -1, 0.5, -0.5, 1, 0.5, 0.5, -1, 0.5, 0.5, 1, -0.5, -0.5, -1, -0.5, -0.5, 1, -0.5, 0.5, -1, -0.5 )

[sub_resource type="Animation" id=17]
length = 0.5
tracks/0/type = "method"
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Mesh:mesh:material:shader_param/dissolve")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 2, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Ring:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 0.5, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=18]
length = 0.2
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Gun:translation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 1, 0.4, 0 ), Vector3( 0.8, 0.4, 0 ), Vector3( 1, 0.4, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Gun:rotation_degrees")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.05, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 15 ), Vector3( 0, 0, 0 ) ]
}

[node name="Gunner" type="KinematicBody"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, 0 )
collision_layer = 2
collision_mask = 14
script = ExtResource( 1 )

[node name="Mesh" type="MeshInstance" parent="."]
mesh = SubResource( 33 )
material/0 = null

[node name="Shape" type="CollisionShape" parent="."]
shape = SubResource( 16 )

[node name="Gun" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0.4, 0 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/die = SubResource( 17 )
anims/shoot = SubResource( 18 )

[node name="Ring" parent="." instance=ExtResource( 3 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.999, 0 )
double_sided = false
max_hp = 200
hp = 200
[connection signal="no_health" from="." to="." method="die"]
